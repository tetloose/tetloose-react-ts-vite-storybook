@use 'sass:color';
@use 'sass:map';
@use '@styles/settings' as *;

$button: (
  primary: (
    font-size: 18px,
    line-height: 22px,
    border: color(default, dark),
    color: color(default, dark),
    bg: color(default, light),
    disabled: (
      border: transparent,
      color: color(default, light),
      bg: color(default, dark),
      outline: transparent
    ),
    hover: (
      border: transparent,
      color: color(default, light),
      bg: color(default, dark),
      outline: transparent
    ),
    active: (
      border: transparent,
      color: color(default, light),
      bg: color(default, dark),
      outline: transparent
    ),
    focus: (
      border: transparent,
      color: color(default, light),
      bg: color(default, dark),
      outline: color(default, dark)
    )
  )
);

@mixin button {
  display: inline-flex;
  align-items: center;

  @include sizing('outline-width', size(.25));
  @include sizing('padding', [size(4), size(8)]);
  @extend %f-heading;
  @extend %f-bold;
  @extend %f-uppercase;

  @include mq-hover {
    @include transition('all');

    &:active {
      transform: translateY(1px);
    }
  }
}

.button {
  background-color: transparent;
  border-style: solid;
  border-color: transparent;
  border-radius: 0;
  box-shadow: none;
  outline-style: solid;
  outline-color: transparent;
  text-decoration: none;

  @include user-select(true);
  @include sizing('border-width', size(.25));

  @include mq-hover {
    cursor: pointer;
  }

  &:disabled {
    @include disable(true);
  }

  @each $variant in (primary) {
    &.is-#{$variant} {
      background-color: deep-get($button, $variant, bg);
      border-color: deep-get($button, $variant, border);
      color: deep-get($button, $variant, color);
      outline-color: deep-get($button, $variant, outline);

      @include button;

      &:disabled {
        background-color: deep-get($button, $variant, disabled, bg);
        border-color: deep-get($button, $variant, disabled, border);
        color: deep-get($button, $variant, disabled, color);
        outline-color: deep-get($button, $variant, disabled, outline);
      }

      @include mq-hover {
        @each $state in (hover, active, focus) {
          @if map.has-key(map.get($button, $variant), $state) {
            &:#{$state} {
              background-color: deep-get($button, $variant, $state, bg);
              border-color: deep-get($button, $variant, $state, border);
              color: deep-get($button, $variant, $state, color);
              outline-color: deep-get($button, $variant, $state, outline);
            }
          }
        }
      }
    }
  }
}
