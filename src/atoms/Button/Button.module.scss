@use '@styles/settings' as *;

$button: (
  primary: (
    font-size: 18px,
    line-height: 22px,
    border: color(default, dark),
    color: color(default, dark),
    bg: color(default, light),
    hover: (
      border: color(default, light),
      color: color(default, light),
      bg: color(default, dark),
    ),
    focus: (
      outline: color(default, dark)
    )
  )
);

.button {
  background-color: transparent;
  border-style: solid;
  border-color: transparent;
  border-radius: 0;
  box-shadow: none;
  outline-style: solid;
  outline-color: transparent;
  text-decoration: none;
  user-select: 'none';

  @include user-select(true);

  @include mq-hover {
    cursor: pointer;
  }

  &:global([disabled]) {
    @include disable(true);
  }

  &.is-primary {
    display: inline-flex;
    align-items: center;
    background-color: deep-get($button, primary, bg);
    color: deep-get($button, primary, color);

    @include border(solid, .25, deep-get($button, primary, border));
    @include sizing('font-size', deep-get($button, primary, font-size));
    @include sizing('line-height', deep-get($button, primary, line-height));
    @include sizing('padding', [size(4), size(8)]);
    @include sizing('outline-width', size(.25));
    @extend %f-heading;
    @extend %f-bold;
    @extend %f-uppercase;

    @include mq-hover {
      @include transition('color, background-color, outline, border');

      &:focus {
        outline-color: deep-get($button, primary, focus, outline);
      }

      &:hover {
        background-color: deep-get($button, primary, hover, bg);
        border-color: deep-get($button, primary, hover, border);
        color: deep-get($button, primary, hover, color);
      }
    }
  }
}
