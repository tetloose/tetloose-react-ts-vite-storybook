@use '@styles/settings' as *;

@mixin gutter($side) {
  &.gutter-#{$side} {
    @include sizing('padding-#{$side}', size(calc(vars(row, gutter) / vars(settings, spacing))));
  }
}

.row {
  $row: &;

  display: flex;

  @if vars(row, max-width) {
    margin-right: auto;
    margin-left: auto;

    @include sizing('max-width', size(calc(vars(row, max-width) / vars(settings, spacing))));

    #{$row} {
      max-width: 100%;
    }
  } @else {
    width: 100%;
  }

  @include gutter('left');
  @include gutter('right');
  @extend %direction;
  @extend %align;
  @extend %wrap;
  @extend %justify;
  @extend %height;

  &__column {
    width: 100%;

    @include gutter('left');
    @include gutter('right');

    &.default-width-auto {
      width: auto;
    }

    @for $i from 1 through vars(row, columns) {
      &.default-width-#{$i} {
        width: column-width(vars(row, columns), #{$i});
      }
    }

    @include mq(vars(breakpoint, sml)) {
      &.sml-width-auto {
        width: auto;
      }

      @for $i from 1 through vars(row, columns) {
        &.sml-width-#{$i} {
          width: column-width(vars(row, columns), #{$i});
        }
      }
    }

    @include mq(vars(breakpoint, med)) {
      &.med-width-auto {
        width: auto;
      }

      @for $i from 1 through vars(row, columns) {
        &.med-width-#{$i} {
          width: column-width(vars(row, columns), #{$i});
        }
      }
    }

    @include mq(vars(breakpoint, lrg)) {
      &.lrg-width-auto {
        width: auto;
      }

      @for $i from 1 through vars(row, columns) {
        &.lrg-width-#{$i} {
          width: column-width(vars(row, columns), #{$i});
        }
      }
    }

    @include mq(vars(breakpoint, xlrg)) {
      &.xlrg-width-auto {
        width: auto;
      }

      @for $i from 1 through vars(row, columns) {
        &.xlrg-width-#{$i} {
          width: column-width(vars(row, columns), #{$i});
        }
      }
    }

    @include mq(vars(breakpoint, xxlrg)) {
      &.xxlrg-width-auto {
        width: auto;
      }

      @for $i from 1 through vars(row, columns) {
        &.xxlrg-width-#{$i} {
          width: column-width(vars(row, columns), #{$i});
        }
      }
    }
  }
}
